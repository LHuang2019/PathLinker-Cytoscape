'''
Thescript creates an simple CytoScape network using data from the test text file
    and run PathLinker via API request to generate new sub-graph/view and k-number paths in JSON format
'''
from py2cytoscape.data.cyrest_client import CyRestClient

import networkx as nx
import pandas as pd
import json
import requests

# create an instance of cyRest client
cy = CyRestClient()

# reset the session
cy.session.delete()

# create a new network from the input txt file using pandas
csv_dir = "example_attachment/graph-dir_human-interactome.txt"
network_csv = pd.read_csv(csv_dir, header=None, sep='\t', lineterminator='\n')

# create an empty directed graph from networkx
nx_network = nx.Graph()

# fill the empty network with source, target, and corresponding edge weight
for row in network_csv.itertuples():
    nx_network.add_edge(row[1], row[2], weight=row[3])

# create the CyNetwork object from the networkx in cytoscape under network collection
cy_network = cy.network.create_from_networkx(nx_network, collection = 'Generated by NetworkX')

cy_network_suid = cy_network.get_id() # obtain network object SUID

# construct PathLinker input data for API request
input_data = {}
input_data["sources"] = "P35968 P00533 Q02763"
input_data["targets"] = "Q15797 Q14872 Q16236 P14859 P36956"
input_data["k"] = 50
input_data["edgeWeightType"] = "PROBABILITIES"
input_data["edgePenalty"] = 1
input_data["edgeWeightColumnName"] = "weight"
input_data["allowSourcesTargetsInPaths"] = False
input_data["includeTiedPaths"] = False
input_data["skipSubnetworkGeneration"] = False

headers = {'Content-Type': 'application/json', 'Accept': 'application/json'}
result = requests.request("POST",
                            "http://localhost:1234/pathlinker/v1/" + str(cy_network_suid) + "/run",
                            data = json.dumps(input_data),
                            params = None,
                            headers = headers)

print(result.content)
