package com.dpgil.pathlinker.path_linker.internal.util;

import java.util.ArrayList;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Path class that represents the path generated by PathLinker
 *      Each path contains a path rank in the corresponding network,
 *      the total path weight
 *      an array list of nodes names that is included in the path
 *      
 * @author Li Huang
 * @version 12.7.2017
 */
@ApiModel(value="Path", 
description="Path object consists of path index, path score, and the name of vertices that constructs the path")
public class Path {

    /** the path rank */
    private int rank;
    /** the total score of the path */
    private double score;
    /** the list of nodes in string in order in the path */
    private ArrayList<String> nodeList;

    /**
     * Default constructor
     * @param rank      the path rank
     * @param score     the path score
     * @param nodeList  the node list
     */
    public Path (int rank, double score, ArrayList<String> nodeList) {
        this.rank = rank;
        this.score = score;
        this.nodeList = nodeList;
    }

    /**
     * Getter method for rank
     * @return rank
     */
    @ApiModelProperty(value = "The rank of the path; e.g. The path rank is 100 if it is the 100th shortest path"
            + "computed by the algorithm", 
            example = "1", required = true)
    public int getRank() {
        return rank;
    }

    /**
     * Getter method for score
     * @return score
     */
    @ApiModelProperty(value = "The total weight of the path", example = "2", required = true)
    public double getScore() {
        return score;
    }

    /**
     * Getter method for the node list
     * @return nodeList
     */
    @ApiModelProperty(value = "The list of nodes in the path. "
            + "The node \"name\" matches to the \"name column\" in the Node Table", 
            example = "[Node1, Node2, Node3]", required = true)
    public ArrayList<String> getNodeList() {
        return nodeList;
    }
}
